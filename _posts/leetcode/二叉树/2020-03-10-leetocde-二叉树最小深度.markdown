---
layout:     post
title:      "求给定二叉树的最小深度"
subtitle:   "递归解法"
date:       2020-03-10 12:00:00
author:     "KH"
header-img: "img/post-bg-apple-event-2015.jpg"
tags:
    - 二叉树
    - 产品
---

> 这篇文章转载自[我在知乎上的回答](http://www.zhihu.com/question/28617408/answer/41626694)

### 题目描述

求给定二叉树的最小深度。最小深度是指树的根结点到最近叶子结点的最短路径上结点的数量。

Given a binary tree, find its minimum depth.The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

### 题目思路

It's there! 二叉树前序遍历

```vim
import java.util.*;

/*
 * public class TreeNode {
 *   int val = 0;
 *   TreeNode left = null;
 *   TreeNode right = null;
 * }
 */

public class Solution {
    /**
     * 
     * @param root TreeNode类 
     * @return int整型
     */
    public int run (TreeNode root) {
        // write code here
        if(root==null) return 0;
        if(root.left==null&&root.right==null){
            return 1;
        }
        int left = run(root.left);
        int right = run(root.right);
        return left<right?left+1:right+1;
        
    }
}
```



## 题目描述

求给定二叉树的最大深度，

最大深度是指树的根结点到最远叶子结点的最长路径上结点的数量。

```
    public int maxDepth (TreeNode root) {
        // write code here
        return  depth(root);
    }
    
    public int depth(TreeNode root){
        if(root==null) return 0;
        if(root.left==null&&root.right==null) return 1;
        int left = depth(root.left);
        int right = depth(root.right);
        return  left>right?left+1:right+1;
    }
```

