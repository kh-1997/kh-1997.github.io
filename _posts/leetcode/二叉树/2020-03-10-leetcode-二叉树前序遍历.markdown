---
layout:     post
title:      "求给定二叉树的前续遍历"
subtitle:   "非递归解法"
date:       2020-03-10 12:00:00
author:     "KH"
header-img: "img/post-bg-apple-event-2015.jpg"
tags:
    - 二叉树
    - 产品
---

> 这篇文章转载牛客网

### 题目描述

求给定的二叉树的前序遍历。

### 题目思路

二叉树前序遍历非递归。

设置一个栈保存遍历的节点，刚开始加入root节点，当栈不为空时，root节点出栈，采用根,右，左遍历的顺序访问节点，加入的list的时候采用list.add(tmp)，从前面插入，结果就是后续遍历的结果。

```vim
 public ArrayList<Integer> postorderTraversal (TreeNode root) {
        // write code here
        ArrayList<Integer>list = new ArrayList<>();
        if(root==null) return list;
        Stack<TreeNode>stack = new Stack<>();
        TreeNode cur = root;
        stack.add(root);
        while(!stack.isEmpty()){
            TreeNode tmp = stack.pop();
            list.add(tmp.val);
            if(tmp.right!=null){
                stack.push(tmp.right);
            }
            if(tmp.left!=null){
                stack.push(tmp.left);
            }
        }
        return list;
    }
```



```
public ArrayList<Integer> preorderTraversal (TreeNode root) {
        // write code here
        Stack<TreeNode>stack = new Stack<>();
        ArrayList<Integer>  list = new ArrayList<>();
        TreeNode cur = root;
        while(cur!=null||!stack.isEmpty()){
            while(cur!=null){
                stack.push(cur);
                list.add(cur.val);
                cur = cur.left;
            }
            TreeNode tmp = stack.pop();
            cur = tmp.right;
        }
        return list;
    }
```



