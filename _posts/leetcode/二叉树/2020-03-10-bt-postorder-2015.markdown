---
layout:     post
title:      "求给定二叉树的后续遍历"
subtitle:   "非递归解法"
date:       2020-03-10 12:00:00
author:     "KH"
header-img: "img/post-bg-apple-event-2015.jpg"
tags:
    - 二叉树
    - 产品
---

> 这篇文章转载牛客网

### 题目描述

求给定二叉树的后续遍历。

### 题目思路

It's there! 二叉树后序遍历非递归。

设置一个栈保存遍历的节点，刚开始加入root节点，当栈不为空时，root节点出栈，采用前序遍历的顺序访问节点，加入的list的时候采用list.add(0,tmp)，从前面插入，结果就是后续遍历的结果。

```vim
import java.util.*;

/*
 * public class TreeNode {
 *   int val = 0;
 *   TreeNode left = null;
 *   TreeNode right = null;
 * }
 */

public class Solution {
    /**
     * 
     * @param root TreeNode类 
     * @return int整型
     */
    public int run (TreeNode root) {
        // write code here
        if(root==null) return 0;
        if(root.left==null&&root.right==null){
            return 1;
        }
        int left = run(root.left);
        int right = run(root.right);
        if(left==0||right==0){
            return left+right+1;
        }
        return left<right?left+1:right+1;
        
    }
}
```







